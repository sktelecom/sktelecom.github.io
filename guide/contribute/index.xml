<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SKT Open Source – 오픈소스 기여하기</title><link>/guide/contribute/</link><description>Recent content in 오픈소스 기여하기 on SKT Open Source</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><atom:link href="/guide/contribute/index.xml" rel="self" type="application/rss+xml"/><item><title>Guide: 오픈소스 기여의 혜택</title><link>/guide/contribute/benefit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guide/contribute/benefit/</guid><description>
&lt;p>오늘날 소프트웨어를 개발하는 기업이라면 당연하게 오픈소스를 사용한다. 그리고 또 많은 기업은 오픈소스를 사용하는 것에 그치지 않고 다시 오픈소스 커뮤니티에 기여한다. 왜 오픈소스에 다시 기여하려고 할까? 오픈소스 프로젝트에 기여하는 것을 권장하는 기업은 다음과 같은 효과를 기대하기 때문이다.&lt;/p>
&lt;h2 id="기업은-왜-오픈소스에-기여해야-할까">기업은 왜 오픈소스에 기여해야 할까?&lt;/h2>
&lt;p>기업이 오픈소스에 기여하는 목적과 이익은 무엇인가? 기업은 왜 구성원의 오픈소스 기여 활동을 장려해야 하나? 기업의 비즈니스 관점에서도 오픈소스에 기여해야 하는 이유는 다음과 같다.&lt;/p>
&lt;h3 id="1-유지-관리-비용을-절감할-수-있다">1. 유지 관리 비용을 절감할 수 있다.&lt;/h3>
&lt;p>기업은 오픈소스를 사용하여 제품을 만들면서 버그를 수정하거나 새로운 기능을 추가한다. 그런데 이를 다시 오픈소스 프로젝트로 기여하지 않는다면 어떻게 될까? ‌&lt;/p>
&lt;p>오픈소스 프로젝트는 중요한 보안 패치 등 새로운 버전을 계속해서 릴리즈할 텐데, 그때마다 기업은 새로운 버전을 적용하기 전에 자체적으로 수정한 사항을 다시 새로운 버전에 반영한 후, 기능은 이상 없이 동작하는지, 성능에는 영향이 없는지 매번 테스트해야 하는 노력이 필요하다. 이러한 수고가 반복된다면 이에 투입해야 하는 인력과 시간 등의 관리 비용은 악몽과도 같이 크게 증가할 것이다. 만약 수정 사항을 오픈소스 프로젝트에 기여했다면 향후 새로운 버전이 릴리즈될 때 수정 사항이 이미 포함되어 있기 때문에 추가로 유지 관리해야 할 필요가 없게 된다.&lt;/p>
&lt;p>따라서 오픈소스를 사용하는 기업은 기여의 중요성을 개발자들에게 교육해야 한다. 물론, 오픈소스 프로젝트에 기여하는 것은 적지 않은 수고와 시간이 들어갈 수 있다. 개발자들은 타이트한 개발 일정 때문에 패치를 만들어도 당장 제품에만 적용하려고 하지, 이를 오픈소스 프로젝트에 기여하지 않으려고 할 수 있다. 그러나 패치를 기여하지 않으면 신규 버전의 오픈소스가 새롭게 릴리즈될 때마다 개발자는 자기가 만든 패치를 재적용해야 한다는 점을 재차 강조하는 바이다. 이러한 작업이 반복될수록 더 많은 시간과 노력을 쏟는 악순환이 된다.&lt;/p>
&lt;h3 id="2-오픈소스-프로젝트의-방향에-영향을-미칠-수-있다">2. 오픈소스 프로젝트의 방향에 영향을 미칠 수 있다.&lt;/h3>
&lt;p>기업이 제품 개발에 중요하게 사용하는 오픈소스 프로젝트에서 기업에 꼭 필요한 기능을 추가해주기를 바라는가? 그렇다면 그 오픈소스 프로젝트에 바라는 기능을 제안하고, 경우에 따라서는 일부분을 직접 개발하고 기여하는 등, 활발히 활동할 것을 권한다. 기업에서 이렇게 기여한 이후에는 여러 사람의 참여를 통해 해당 기능을 안정화하고 고도화하여 결과적으로는 기업이 원하는 방향으로 성장하게 된다.&lt;/p>
&lt;h3 id="3-우수한-개발자를-고용할-수-있다">3. 우수한 개발자를 고용할 수 있다.&lt;/h3>
&lt;p>우수한 오픈소스 개발자를 찾을 수 있는 가장 좋은 장소는 바로 오픈소스 커뮤니티이다. 오픈소스에 적극적으로 기여하는 기업은 오픈소스 커뮤니티에서 좋은 평판을 쌓게 된다. 오픈소스 커뮤니티의 우수한 개발자는 오픈소스에 적극적으로 기여하는 기업이 어디인지 알고 있고, 그런 기업에서 일하고 싶어 한다. 오픈소스 기여 활동을 전혀 하지 않는 기업이 우수한 오픈소스 개발자를 채용하기는 쉽지 않다.&lt;/p>
&lt;h2 id="개발자는-왜-오픈소스에-기여해야-할까">개발자는 왜 오픈소스에 기여해야 할까?&lt;/h2>
&lt;h3 id="1-공공의-이익에-기여할-수-있다">1. 공공의 이익에 기여할 수 있다&lt;/h3>
&lt;p>사용 중인 오픈소스의 버그를 직접 수정하거나 새로운 기능을 추가하면 소프트웨어가 개선될 뿐만 아니라 이 소프트웨어를 사용하는 모두에게 이익을 제공하게 된다. 작은 기여로 글로벌 커뮤니티에 공헌하는 것이다.&lt;/p>
&lt;h3 id="2-실력을-키울-수-있다">2. 실력을 키울 수 있다&lt;/h3>
&lt;p>오픈소스에 기여하는 활동을 통해 새로운 기술을 배울 수 있다. 그뿐만 아니라 반복적인 연습과 훈련을 통해 역량을 향상할 수 있다. 버전 관리, Unit Test, Integration Test, CI/CD 등은 오픈소스 프로젝트 개발에서 탄생하여 지금은 거의 모든 소프트웨어 개발 시 사용되고 있는 개발방법론이다. 이들을 오픈소스 프로젝트에서 배울 수 있다. 더구나, 오픈소스 프로젝트는 회사 업무와는 달리 오픈소스 프로젝트에서는 초보자의 실수에 비교적 관대하여 본인의 의지만 확고하다면 기술 역량을 향상할 수 있는 최고의 공간이다. 오픈소스 프로젝트에서는 코딩뿐만 아니라 UI, 그래픽 디자인, 문서 작성 등의 실무를 배울 수 있다.&lt;/p>
&lt;h3 id="3-오픈소스를-깊은-수준에서-이해하고-기술을-습득할-수-있다">3. 오픈소스를 깊은 수준에서 이해하고 기술을 습득할 수 있다.&lt;/h3>
&lt;p>단순히 오픈소스를 사용하는 수준을 넘어 오픈소스 기여를 위해 이슈를 이해하고, 문제를 해결하게 되면 보다 더 깊은 수준으로 오픈소스 기술을 습득하게 된다. 이러한 활동은 오픈소스의 향후 변경 사항을 쉽게 식별하여 유연하게 대응할 수 있게 하며, 오픈소스 활용을 더 확장해나갈 수도 있다.&lt;/p>
&lt;h3 id="4-협업을-배울-수-있다">4. 협업을 배울 수 있다&lt;/h3>
&lt;p>오픈소스 커뮤니티는 전 세계의 다양한 지역, 다른 시간대의 사람들이 모여 있는 공간이다. 이러한 제약 가운데 공통 과제를 수행하기 위해서는 고도의 협업 능력이 필요하다. 오픈소스 프로젝트에서는 분업, 위험관리를 고려한 진정한 협업이 이뤄진다. 이와 더불어 협업을 가능하게 하는 여러 도구에도 익숙해질 수 있다. 이슈 트래커, 버전 관리 시스템, 메일링리스트와 같은 도구가 대표적이다.&lt;/p>
&lt;h3 id="5-새로운-사람을-만날-수-있다">5. 새로운 사람을 만날 수 있다&lt;/h3>
&lt;p>오픈소스에는 커뮤니티가 있다. 공통 관심사가 있는 사람들이 참여하고 만남으로써 관계를 만들어 갈 수 있다. 어떤 사람을 만나느냐가 경력의 방향에 큰 영향을 미칠 수 있다. 신뢰할 수 있는 관계가 되고 나면 서로 새로운 업무나 직장으로 이끌어줄 수 있다. 오픈소스 커뮤니티에서는 항상 전문적으로 협업하면서 서로 업무 스타일과 인성을 깊이 있게 파악할 수 있어서 가능한 일이다. 이처럼 오픈소스 프로젝트에 기여하면서 형성된 관계야말로 왜 기여해야 하는지를 설명하는 분명한 답변 중 하나이다.&lt;/p>
&lt;h3 id="6-평판과-경력을-키울-수-있다">6. 평판과 경력을 키울 수 있다&lt;/h3>
&lt;p>오픈소스 작업은 모두에게 공개된다. 오픈소스에서 수행한 작업은 어디에서나 누구에게든 보여줄 수 있으며, 이는 개인의 평판을 높이는 데 큰 도움이 된다.&lt;/p>
&lt;h3 id="7-리더쉽을-배울-수-있다">7. 리더쉽을 배울 수 있다&lt;/h3>
&lt;p>오픈소스에서는 팀 구성, 갈등 해결 및 우선순위 조정과 같은 리더십과 관리 기술을 배울 수 있다. 오픈소스 프로젝트에서 공동 작업을 하려면 누군가에게 업무 수행 방식을 설명해야 하고, 다른 사람들에게 도움을 요청해야 할 일이 있다. 이렇게 배우고 가르치는 일을 통해 리더쉽을 경험하고, 성취감을 맛보게 된다.&lt;/p></description></item><item><title>Guide: SK텔레콤 오픈소스 기여 Rule</title><link>/guide/contribute/rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guide/contribute/rule/</guid><description>
&lt;p>SK텔레콤은 오픈소스 커뮤니티와의 협업의 가치를 존중하고, 이를 위해 구성원의 외부 오픈소스 프로젝트로의 기여를 장려한다. 하지만, SK텔레콤의 지식재산 보호와 의도치 않은 저작권 침해를 방지하기 위해 준수해야 할 몇가지 규칙이 있다.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">문의&lt;/h4>
어느 것이라도 무언가 바람직하지 않아 보이는 상황이 있다면 주저하지 말고 OSPO에 문의하라. :&lt;a href="https://sktelecom.github.io/about/contact/">Support (&lt;a href="mailto:opensource@sktelecom.com">opensource@sktelecom.com&lt;/a>)&lt;/a>
&lt;/div>
&lt;h2 id="승인을-받아라">승인을 받아라&lt;/h2>
&lt;p>오픈소스 기여는 저작권 관점에서 저작자가 저작물을 수정/사용/배포할 수 있는 권한을 오픈소스 프로젝트에 부여하는 것이다. 때에 따라서는 오픈소스 프로젝트에 여러분의 저작권을 양도해야 하기도 한다. 그런데 일반적으로 고용 기간에 만든 저작물의 저작권은 고용주가 소유한다. 즉, SK텔레콤 구성원이 만든 저작물은 SK텔레콤이 소유한다. 구성원이 임의로 저작물을 오픈소스에 기여하는 행위는 불필요한 저작권 침해 이슈를 유발시킬 수 있다.&lt;/p>
&lt;p>따라서, 기여하고자 하는 오픈소스 프로젝트가 있다면 SK텔레콤 오픈소스 기여 정책에 따라 최초 기여하기 전에 리뷰 요청 및 승인 절차를 따른다.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="/guide/release/process">오픈소스 기여 절차&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="기여할-권리가-있는-코드만-기여하라">기여할 권리가 있는 코드만 기여하라&lt;/h2>
&lt;p>기여할 권리가 있는 코드만 기여하라. 즉, 직접 작성한 코드를 기여하라. 3rd party의 코드를 여러분이 임의로 기여해서는 안된다.&lt;/p>
&lt;h2 id="지식-재산-노출에-주의하라">지식 재산 노출에 주의하라&lt;/h2>
&lt;p>민감한 정보, 특허 등 기업의 지식재산 노출이 우려되는 코드, 문서 기여하지 마라.&lt;/p>
&lt;p>기여하려는 코드에 회사의 특허가 포함되어 있다면, 이 특허를 오픈소스 라이선스로 프로젝트에 기여해도 되는지 확인하라. 모호한 부분이 있다면 OSPO에 문의하라.&lt;/p>
&lt;h2 id="수준-이하의-코드는-기여하지-마라">수준 이하의 코드는 기여하지 마라&lt;/h2>
&lt;p>수준 이하의 코드는 기여하지 마라. 이는 기업의 평판에도 영향을 미칠 수 있다.&lt;/p>
&lt;h2 id="cla-서명에-주의하라">CLA 서명에 주의하라&lt;/h2>
&lt;p>어떤 오픈소스 프로젝트는 모든 기여자에게 CLA (Contributor License Agreement)에 서명할 것을 요구한다. 이는 프로젝트가 여러 기여자의 저작물을 관리하면서 발생할 수 있는 저작권 분쟁을 줄이기 위해 기여자들에게 동의를 구하는 약정서이다. 보통 대기업이 주도하는 프로젝트에서 CLA에 서명할 것을 요구한다.&lt;/p>
&lt;p>CLA는 프로젝트마다 다르지만 주로 다음 사항을 동의한다는 내용을 담고 있다.&lt;/p>
&lt;pre>&lt;code>- 나(또는 소속 기업)는 내가 기여하려고 하는 기여물을 프로젝트에 기여할 권리가 있다. (즉, 이 기여물의 저작자이다.)
- 나(또는 소속 기업)는 나의 기여물을 프로젝트가 수정, 배포, 관리할 수 있는 권한을 프로젝트에 부여한다.
- 나(또는 소속 기업)는 부여한 권한을 철회하지 않는다.
- 나(또는 소속 기업)는 프로젝트가 향후 필요에 따라 라이선스를 변경할 수 있는 권한을 프로젝트에 부여한다.
&lt;/code>&lt;/pre>&lt;p>또한, 드문 경우지만, 어떤 CLA는 다음과 같은 조건에 대해서도 동의를 요구한다.&lt;/p>
&lt;pre>&lt;code>- 나(또는 소속 기업)는 나의 기여물을 기여함과 동시에 나의 저작권을 프로젝트 또는 프로젝트 관리 조직으로 양도한다.
&lt;/code>&lt;/pre>&lt;p>SK텔레콤은 자사의 지식재산 보호를 위해 저작권 양도를 요구하는 오픈소스 프로젝트로의 기여는 허용하지 않는다. 이러한 판단을 위해 SK텔레콤의 구성원은 기여하려는 오픈소스 프로젝트에서 CLA 서명을 요구할 경우, 서명하기 전에 반드시 OSPO에 리뷰 요청을 하라. : 오픈소스 기여 절차&lt;/p>
&lt;p>대부분의 CLA는 서명해도 문제가 되지 않기 때문에 승인 절차가 오래 걸리지 않다.&lt;/p>
&lt;h2 id="저작권을-표시하라">저작권을 표시하라&lt;/h2>
&lt;p>구성원이 재직 기간에 생성한 저작물의 지식재산은 기본적으로 기업이 소유한다. 따라서, 구성원은 외부 오픈소스 프로젝트에 코드를 기여할 때 SK텔레콤의 저작권을 표기해야 한다.&lt;/p>
&lt;p>하나 이상의 파일을 기여할 때, 다음과 같이 파일 상단에 저작권과 라이선스를 표기하라.&lt;/p>
&lt;pre>&lt;code>Copyright 2021 SK TELECOM CO., LTD.
SPDX-License-Identifier: {$SPDX_license_name}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>여기서 $SPDX_license_name은 해당 오픈소스 프로젝트의 라이선스 정책에 따라 작성한다.&lt;/li>
&lt;li>단, 버그 수정 등의 목적으로 기존 코드를 수정하는 정도라면 해당 코드 수정에 대해 저작권을 표기할 필요는 없다.&lt;/li>
&lt;li>자세한 저작권 및 라이선스 표기 규칙은 다음 페이지를 참고하라. : &lt;a href="/guide/release/process/copyright">파일 내 저작권 및 라이선스 표시&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="회사-이메일을-사용하라">회사 이메일을 사용하라&lt;/h2>
&lt;p>오픈소스 프로젝트에 기여 시 개인 이메일을 사용하지 말고, SK텔레콤 이메일을 사용하라. 이를 통해 (1) 구성원은 회사를 대표하여 커뮤니티와 커뮤니케이션한다는 책임감을 갖게 되고, (2) SK텔레콤이 오픈소스 커뮤니티에 기여 활동을 활발히 하는 기업으로 인지도를 개선할 수 있다.&lt;/p>
&lt;ul>
&lt;li>GitHub에서 이메일 설정하는 방법은 다음 &lt;a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-user-account/setting-your-commit-email-address">Link&lt;/a>를 참고한다.&lt;/li>
&lt;/ul></description></item><item><title>Guide: SK텔레콤 오픈소스 기여 절차</title><link>/guide/contribute/process/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guide/contribute/process/</guid><description>
&lt;p>SK텔레콤의 오픈소스 기여 규칙에 따라 구성원은 외부 오픈소스 프로젝트에 기여할 때 다음과 같은 기여 절차를 따른다.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">기여 절차 생략 가능&lt;/h4>
&lt;p>단, 다음과 같이 단순한 내용일 경우, 저작권 침해 리스크가 크지 않기 때문에 리뷰 절차 없이 구성원의 판단에 따라 기여할 수 있다.&lt;/p>
&lt;ul>
&lt;li>10 라인 이하의 작은 코드 조각&lt;/li>
&lt;li>Stack Overflow에서의 문의 / 답변&lt;/li>
&lt;li>GitHub에서의 관리 활동 : Issue 생성, Pull Request Review / Approve 등&lt;/li>
&lt;/ul>
&lt;/div>
&lt;p>&lt;img src="./contribution-process.png" alt="process">&lt;/p>
&lt;h2 id="1-소속-조직-내부-승인">1. 소속 조직 내부 승인&lt;/h2>
&lt;p>하나의 오픈소스 프로젝트에 기여를 시작하기 전에 소속 조직의 담당 임원 혹은 리더에게 승인을 받는다.&lt;/p>
&lt;h2 id="2-ospo-review-요청">2. OSPO Review 요청&lt;/h2>
&lt;p>조직 내 승인을 받은 후에는 OSPO&lt;sub>Open Source Program Office&lt;/sub>에 리뷰를 요청한다. : &lt;a href="https://sktelecom.github.io/about/contact/">Support (opensource@sktelecom.com)&lt;/a>&lt;/p>
&lt;ul>
&lt;li>리뷰 요청 시에는 다음 내용을 포함한다. : [Template]
&lt;ul>
&lt;li>오픈소스 프로젝트 이름&lt;/li>
&lt;li>Repository&lt;/li>
&lt;li>License&lt;/li>
&lt;li>기여 목적&lt;/li>
&lt;li>기여 내용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>OSPO는 오픈소스 프로젝트의 License / CLA를 검토하고, 이상이 없을 경우 승인한다.&lt;/li>
&lt;li>OSPO는 SK텔레콤 구성원이 기여하고 있는 오픈소스 프로젝트 현황을 취합하고 있다. 취합 자료는 오픈소스 프로젝트 별 전문가 Pool로 활용한다.&lt;/li>
&lt;/ul>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">승인 받은 프로젝트&lt;/h4>
기여하고자 하는 오픈소스 프로젝트에 대해 한번 OSPO 리뷰 및 승인을 받은 후에는 해당 오픈소스 프로젝트에는 구성원의 재량에 따라 기여할 수 있다.
&lt;/div>
&lt;h2 id="3-프로젝트-기여-문서-검토">3. 프로젝트 기여 문서 검토&lt;/h2>
&lt;p>오픈소스 프로젝트마다 요구하는 절차가 조금씩 다르다.&lt;/p>
&lt;ul>
&lt;li>프로젝트마다 코딩 스타일, language, formatting, bug/ticket 관리, 릴리즈 시기 등에 대한 다양한 가이드라인을 갖고 있다.&lt;/li>
&lt;li>어떤 프로젝트는 CLA 서명을 요구하는 반면, 어떤 프로젝트는 DCO Signed-off-by를 요구를 한다.&lt;/li>
&lt;li>Patch를 받는 방식도 요즘은 대부분 Github의 Pull Request로 받지만, 어떤 프로젝트는 여전히 Mailing List를 이용하기도 한다.&lt;/li>
&lt;/ul>
&lt;p>그렇기 때문에 기여하고자 하는 프로젝트의 프로세스를 제대로 이해하기 위해서는 우선 프로젝트에서 제공하는 문서를 잘 확인해야 한다. 대개의 프로젝트는 CONTRIBUTING 또는 README 파일로 이러한 문서를 제공한다. 예를 들어, Kubernetes는 기여자를 위한 자세한 가이드를 제공한다. (&lt;a href="https://github.com/kubernetes/community/blob/master/contributors/guide/contributing.md">contributing.md&lt;/a> : Kubernetes에 기여하기 위한 가이드) 문서에서 요구하는 사항을 잘 준수할수록 우리의 기여가 수락될 가능성이 커진다.&lt;/p>
&lt;h2 id="4-오픈소스-기여-rule-준수">4. 오픈소스 기여 Rule 준수&lt;/h2>
&lt;p>&lt;a href="/guide/contribute/rule">SK텔레콤 오픈소스 기여 Rule&lt;/a>을 확인하고 이에 따라 기여할 코드를 개선한다.&lt;/p>
&lt;h2 id="5-기여-제출">5. 기여 제출&lt;/h2>
&lt;p>이제 프로젝트의 문서에서 요구하는 절차에 따라 기여를 제출한다. 일반적인 오픈소스 프로젝트에 기여하는 방법은 다음 페이지를 참고하라.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="/guide/contribute/process/submit">기여 제출 세부 절차&lt;/a>&lt;/li>
&lt;li>&lt;a href="/guide/contribute/background/communication">커뮤니케이션 방법&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Guide: 오픈소스 기여 배경 정보</title><link>/guide/contribute/background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/guide/contribute/background/</guid><description/></item></channel></rss>